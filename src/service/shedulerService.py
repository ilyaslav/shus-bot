import asyncio
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime
from database.repository import Repository
from config import bot

class SchedulerService:

    @staticmethod
    async def scheduleBroadcast():
        scheduler = AsyncIOScheduler()
        scheduler.start()
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 3, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 4, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 5, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 6, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 7, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 8, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 9, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 10, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 11, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 12, 0, 1))
        scheduler.add_job(Repository.updateScore, 'date',  run_date=datetime(2024, 12, 13, 0, 1))

        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 3, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 4, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 5, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 6, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 7, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 8, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 9, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 10, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 11, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 12, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 13, 0, 0))
        scheduler.add_job(Repository.checkFeed, 'date',  run_date=datetime(2024, 12, 14, 0, 0))

        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 3, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 4, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 5, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 6, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 7, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 8, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 9, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 10, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 11, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 12, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 13, 0, 0))
        scheduler.add_job(Repository.checkPlay, 'date',  run_date=datetime(2024, 12, 14, 0, 0))

        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 3, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 4, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 5, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 6, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 7, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 8, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 9, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 10, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 11, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 12, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 13, 0, 0))
        scheduler.add_job(Repository.checkSleep, 'date',  run_date=datetime(2024, 12, 14, 0, 0))

        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 3, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 4, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 5, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 6, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 7, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 8, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 9, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 10, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 11, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 12, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 13, 0, 1))
        scheduler.add_job(Repository.updateFeed, 'date',  run_date=datetime(2024, 12, 14, 0, 1))

        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 3, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 4, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 5, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 6, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 7, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 8, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 9, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 10, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 11, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 12, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 13, 0, 1))
        scheduler.add_job(Repository.updatePlay, 'date',  run_date=datetime(2024, 12, 14, 0, 1))

        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 3, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 4, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 5, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 6, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 7, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 8, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 9, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 10, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 11, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 12, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 13, 0, 1))
        scheduler.add_job(Repository.updateSleep, 'date',  run_date=datetime(2024, 12, 14, 0, 1))
