from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
from database.repository import Repository
from config import bot

class SchedulerService:
    async def __init__(self) -> None:
        self.scheduler = BackgroundScheduler()
        await self.scheduleBroadcast()

    async def scheduleBroadcast(self):
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 3, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 4, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 5, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 6, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 7, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 8, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 9, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 10, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 11, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 12, 0, 1))
        await self.scheduler.add_job(await Repository.updateScore(), 'date', datetime(2024, 12, 13, 0, 1))

        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 3, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 4, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 5, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 6, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 7, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 8, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 9, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 10, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 11, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 12, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 13, 0, 0))
        await self.scheduler.add_job(await Repository.checkFeed(), 'date', datetime(2024, 12, 14, 0, 0))

        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 3, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 4, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 5, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 6, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 7, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 8, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 9, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 10, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 11, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 12, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 13, 0, 0))
        await self.scheduler.add_job(await Repository.checkPlay(), 'date', datetime(2024, 12, 14, 0, 0))

        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 3, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 4, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 5, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 6, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 7, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 8, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 9, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 10, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 11, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 12, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 13, 0, 0))
        await self.scheduler.add_job(await Repository.checkSleep(), 'date', datetime(2024, 12, 14, 0, 0))

        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 3, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 4, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 5, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 6, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 7, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 8, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 9, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 10, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 11, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 12, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 13, 0, 1))
        await self.scheduler.add_job(await Repository.updateFeed(), 'date', datetime(2024, 12, 14, 0, 1))

        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 3, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 4, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 5, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 6, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 7, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 8, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 9, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 10, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 11, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 12, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 13, 0, 1))
        await self.scheduler.add_job(await Repository.updatePlay(), 'date', datetime(2024, 12, 14, 0, 1))

        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 3, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 4, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 5, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 6, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 7, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 8, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 9, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 10, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 11, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 12, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 13, 0, 1))
        await self.scheduler.add_job(await Repository.updateSleep(), 'date', datetime(2024, 12, 14, 0, 1))

    async def sendMessage(id: str, text: str):
        bot.send_message(user_id = id, text=text)
